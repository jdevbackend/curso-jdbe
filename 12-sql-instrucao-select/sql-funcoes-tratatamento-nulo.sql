--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------- FUNÇÕES PARA TRATAR ------------------------------------
--------------------------- VALORES NULOS --------------------------------------
--------------------------------------------------------------------------------
-- NVL: SE O VALOR DA EXPRESSÃO FOR NULO ELE RETORNARÁ A SEGUNDA 
-- EXPRESSÃO.
SELECT NVL(NULL, 'TRATANDO_NULL')
  FROM DUAL;
  
SELECT NVL('VALOR', 'TRATANDO_NULL')
  FROM DUAL;
  
-- NVL2: SE A PRIMEIRA EXPRESSÃO NÃO FOR NULA, RETORNARÁ ELA MESMA. SE A 
-- PRIMEIRA EXPRESSÃO FOR NULA A SEGUNDA EXPRESSÃO SERÁ RETORNADA. SE AMBAS 
-- (A PRIMEIRA E A SEGUNDA EXPRESSÃO FOREM NULAS), RETORNARÁ A TERCEIRA:
SELECT NVL2('PRIMEIRA_EXPRESSAO','NAO_E_NULL','E_NULL')
  FROM DUAL;
  
SELECT NVL2(NULL,'NAO_E_NULL','E_NULL')
  FROM DUAL;
  
-- NULLIF: VERIFICA DUAS EXPRESSÕES, SE AMBAS FOREM IGUAIS, RETORNARÁ NULL. E SE
-- FOREM DIFERENTES, RETORNARÁ O VALOR DA PRIMEIRA EXPRESSÃO:
SELECT NULLIF('IGUAL','IGUAL') -- RETORNARÁ NULL
  FROM DUAL;
  
SELECT NULLIF('IGUAL','DIFERENTE') -- RETORNARÁ A PRIMEIRA EXPRESSÃO
  FROM DUAL;
  
-- COALESCE: SE A PRIMEIRA EXPRESSÃO NÃO FOR NULA, RETORNARÁ ELA MESMA, SE FOR
-- NULA RETORNARÁ A SEGUNDA EXPRESSÃO E SE AMBAS (A PRIMEIRA E A SEGUNDA 
-- EXPRESSÃO) FOREM NULAS, RETORNARÁ A TERCEIRA EXPRESSÃO:
SELECT COALESCE('NAO_E_NULL','EXPRES1','EXPRES2')
  FROM DUAL;
  
SELECT COALESCE(NULL,'EXPRES1','EXPRES2')
  FROM DUAL;
  
SELECT COALESCE('NAO_E_NULL',NULL,'EXPRES2')
  FROM DUAL;
  
SELECT COALESCE(NULL,NULL,'EXPRES2')
  FROM DUAL;
